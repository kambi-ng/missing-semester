"use strict";(self.webpackChunkmissing_semester=self.webpackChunkmissing_semester||[]).push([[438],{3905:(a,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>g});var t=n(7294);function i(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function r(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n.push.apply(n,t)}return n}function u(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}function l(a,e){if(null==a)return{};var n,t,i=function(a,e){if(null==a)return{};var n,t,i={},r=Object.keys(a);for(t=0;t<r.length;t++)n=r[t],e.indexOf(n)>=0||(i[n]=a[n]);return i}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(t=0;t<r.length;t++)n=r[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(a,n)&&(i[n]=a[n])}return i}var o=t.createContext({}),s=function(a){var e=t.useContext(o),n=e;return a&&(n="function"==typeof a?a(e):u(u({},e),a)),n},m=function(a){var e=s(a.components);return t.createElement(o.Provider,{value:e},a.children)},p="mdxType",d={inlineCode:"code",wrapper:function(a){var e=a.children;return t.createElement(t.Fragment,{},e)}},k=t.forwardRef((function(a,e){var n=a.components,i=a.mdxType,r=a.originalType,o=a.parentName,m=l(a,["components","mdxType","originalType","parentName"]),p=s(n),k=i,g=p["".concat(o,".").concat(k)]||p[k]||d[k]||r;return n?t.createElement(g,u(u({ref:e},m),{},{components:n})):t.createElement(g,u({ref:e},m))}));function g(a,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof a||i){var r=n.length,u=new Array(r);u[0]=k;var l={};for(var o in e)hasOwnProperty.call(e,o)&&(l[o]=e[o]);l.originalType=a,l[p]="string"==typeof a?a:i,u[1]=l;for(var s=2;s<r;s++)u[s]=n[s];return t.createElement.apply(null,u)}return t.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5162:(a,e,n)=>{n.d(e,{Z:()=>u});var t=n(7294),i=n(6010);const r="tabItem_Ymn6";function u(a){let{children:e,hidden:n,className:u}=a;return t.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,u),hidden:n},e)}},5488:(a,e,n)=>{n.d(e,{Z:()=>k});var t=n(7462),i=n(7294),r=n(6010),u=n(2389),l=n(7392),o=n(7094),s=n(2466);const m="tabList__CuJ",p="tabItem_LNqP";function d(a){const{lazy:e,block:n,defaultValue:u,values:d,groupId:k,className:g}=a,c=i.Children.map(a.children,(a=>{if((0,i.isValidElement)(a)&&"value"in a.props)return a;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof a.type?a.type:a.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??c.map((a=>{let{props:{value:e,label:n,attributes:t}}=a;return{value:e,label:n,attributes:t}})),h=(0,l.l)(b,((a,e)=>a.value===e.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((a=>a.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===u?u:u??c.find((a=>a.props.default))?.props.value??c[0].props.value;if(null!==y&&!b.some((a=>a.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${b.map((a=>a.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:v}=(0,o.U)(),[C,N]=(0,i.useState)(y),j=[],{blockElementScrollPositionUntilNextRender:w}=(0,s.o5)();if(null!=k){const a=f[k];null!=a&&a!==C&&b.some((e=>e.value===a))&&N(a)}const E=a=>{const e=a.currentTarget,n=j.indexOf(e),t=b[n].value;t!==C&&(w(e),N(t),null!=k&&v(k,String(t)))},O=a=>{let e=null;switch(a.key){case"Enter":E(a);break;case"ArrowRight":{const n=j.indexOf(a.currentTarget)+1;e=j[n]??j[0];break}case"ArrowLeft":{const n=j.indexOf(a.currentTarget)-1;e=j[n]??j[j.length-1];break}}e?.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",m)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},g)},b.map((a=>{let{value:e,label:n,attributes:u}=a;return i.createElement("li",(0,t.Z)({role:"tab",tabIndex:C===e?0:-1,"aria-selected":C===e,key:e,ref:a=>j.push(a),onKeyDown:O,onClick:E},u,{className:(0,r.Z)("tabs__item",p,u?.className,{"tabs__item--active":C===e})}),n??e)}))),e?(0,i.cloneElement)(c.filter((a=>a.props.value===C))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},c.map(((a,e)=>(0,i.cloneElement)(a,{key:e,hidden:a.props.value!==C})))))}function k(a){const e=(0,u.Z)();return i.createElement(d,(0,t.Z)({key:String(e)},a))}},6772:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>o,default:()=>k,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var t=n(7462),i=(n(7294),n(3905)),r=n(5488),u=n(5162);const l={sidebar_position:5,title:"4. Menggunakan Git"},o="Git",s={unversionedId:"git",id:"git",title:"4. Menggunakan Git",description:"<iframe",source:"@site/docs/git.mdx",sourceDirName:".",slug:"/git",permalink:"/git",draft:!1,editUrl:"https://github.com/kambi-ng/missing-semester/edit/main/docs/git.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"4. Menggunakan Git"},sidebar:"tutorialSidebar",previous:{title:"Command Line Dan Path",permalink:"/command-line/path"}},m={},p=[{value:"Version Control System (VCS)",id:"version-control-system-vcs",level:2},{value:"Konsep Git",id:"konsep-git",level:2},{value:"Repository",id:"repository",level:3},{value:"Branch",id:"branch",level:3},{value:"Commit",id:"commit",level:3},{value:"Menggunakan Git",id:"menggunakan-git",level:2},{value:"Repository",id:"repository-1",level:3},{value:"Inisialisasi",id:"inisialisasi",level:4},{value:"Inisialisasi Folder",id:"inisialisasi-folder",level:5},{value:"Clone Repository",id:"clone-repository",level:5},{value:"Commit",id:"commit-1",level:4},{value:"Push",id:"push",level:4},{value:"Branching",id:"branching",level:3},{value:"Membuat Baru",id:"membuat-baru",level:4},{value:"Push",id:"push-1",level:4},{value:"Merge",id:"merge",level:4},{value:"Resources",id:"resources",level:2}],d={toc:p};function k(a){let{components:e,...n}=a;return(0,i.kt)("wrapper",(0,t.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"git"},"Git"),(0,i.kt)("center",null,(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/2sjqTHE0zok",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0})),(0,i.kt)("h2",{id:"version-control-system-vcs"},"Version Control System (VCS)"),(0,i.kt)("p",null,"Version Control System adalah program-program yang digunakan untuk mendeteksi perubahan dari source code. Tidak hanya itu, VCS juga digunakan untuk kolaborasi. VCS mendeteksi perubahan dari folder dan isinya dengan snapshot-snapshot yang tersimpan, di mana setiap snapshot menyimpan kondisi folder/file yang ada. Tidak hanya itu, setiap snapshot juga memiliki metadata yang berisi kapan snapshot itu dibuat, pesan yang terkait, dan lain-lain."),(0,i.kt)("p",null,"VCS berguna tidak hanya untuk mengakomodasi kolaborasi, namun juga dapat membantu melakukan perubahan yang terkait dengan snapshot, seperti mengembalikan kondisi source code ke suatu snapshot."),(0,i.kt)("p",null,"Terdapat berbagai macam program VCS, seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"svn"),", Mercurial, dan ",(0,i.kt)("inlineCode",{parentName:"p"},"git"),". Namun, ",(0,i.kt)("inlineCode",{parentName:"p"},"git")," merupakan VCS yang paling populer digunakan."),(0,i.kt)("h2",{id:"konsep-git"},"Konsep Git"),(0,i.kt)("center",null,(0,i.kt)("img",{src:"https://imgs.xkcd.com/comics/git.png"})),(0,i.kt)("center",null,(0,i.kt)("a",{href:"https://xkcd.com/1597"},"xkcd 1597: Git")),(0,i.kt)("p",null,"Seperti yang dapat dilihat dalam komik xkcd tersebut, git memiliki konsep yang sangat keren, namun memiliki interface yang tidak ramah bagi kebanyakan pengguna (terutama pemula). Untuk itu, materi ini akan memberikan informasi mengenai konsep-konsep yang ada di git, sehingga kamu diharapkan agar lebih mudah mengerti interface yang ada."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Banyak informasi di sini yang disimplifikasi, meskipun tidak merepresentasikan apa yang dilakukan ",(0,i.kt)("inlineCode",{parentName:"p"},"git")," secara akurat, informasi yang diberikan diharapkan tetap memberi gambaran besar mengenai konsep-konsep yang ada di git.")),(0,i.kt)("h3",{id:"repository"},"Repository"),(0,i.kt)("p",null,"Suatu repository adalah tempat penyimpanan virtual yang menyimpan segala hal mengenai proyek yang dibuat. Konsep yang dimiliki mirip seperti folder, namun suatu repository dapat menyimpan snapshot-snapshot dari perubahan yang dilakukan, serta metadata yang diikuti."),(0,i.kt)("p",null,"Repository dapat berada di lokal dan juga remote. Repository lokal adalah repository yang berada di dalam komputer kamu, sedangkan repository remote adalah repository yang berada di service git yang ada di internet, seperti GitHub atau Gitlab."),(0,i.kt)("h3",{id:"branch"},"Branch"),(0,i.kt)("p",null,'Seperti dengan namanya, suatu branch adalah "cabang" dari repository tersebut. Artinya, suatu repository dapat memiliki versi-versi yang berbeda. Branch membantu dalam mengorganisasikan pekerjaan dengan melakukan pekerjaan tersebut di tempat yang berbeda tanpa menyentuh versi utamanya. Suatu branch juga dapat "menimpa" perubahan-perubahan dari branch lain, sehingga perubahan yang ada di branch lain dapat juga dimasukkan ke dalam branch yang sedang dipakai.'),(0,i.kt)("p",null,'Sebagai contoh, kamu sedang membuat website bersama teman-temanmu. Kamu ingin membuat suatu fitur, sehingga kamu membuat branch baru agar orang lain tidak terganggu dengan perubahan-perubahan kamu. Setelah selesai, kamu "menimpa" branch kamu ke branch utama, sehingga fitur kamu dirilis.'),(0,i.kt)("h3",{id:"commit"},"Commit"),(0,i.kt)("p",null,"Commit adalah snapshot dari suatu perubahan yang terjadi di suatu branch. Commit tidak hanya menyimpan snapshot dari file yang berubah, namun juga metadata yang terkait dengan commit tersebut, seperti siapa yang membuat commit tersebut, kapan waktu commit tersebut dibuat, dan lain-lain."),(0,i.kt)("p",null,'Pada sistem git, suatu commit terkait dengan commit-commit lainnya, sehingga sistem yang digunakan git adalah "relasi dari commit". Hal ini membuat git menjadi fleksibel untuk melakukan kolaborasi dengan banyak branch, hingga melakukan undo dari suatu commit.'),(0,i.kt)("h2",{id:"menggunakan-git"},"Menggunakan Git"),(0,i.kt)("p",null,"Setelah kamu mengenal konsep-konsep penting git, kamu akan mempelajari bagaimana cara menggunakan git secara langsung. Karena banyak sekali perintah yang ada di git, tidak semua perintah akan dipelajari dalam materi ini. Materi ini hanya akan menginformasikan kamu perintah-perintah dasar yang selalu dipakai dalam pengoperasian git."),(0,i.kt)("p",null,"Jika kamu ingin mempelajari lebih lanjut, kamu bisa membaca ",(0,i.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/"},"Pro Git Book"),"."),(0,i.kt)("h3",{id:"repository-1"},"Repository"),(0,i.kt)("h4",{id:"inisialisasi"},"Inisialisasi"),(0,i.kt)("p",null,"Dalam git, kamu dapat menginisialisasikan suatu repository git dengan dua cara:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Membuat suatu folder menjadi git repository"),(0,i.kt)("li",{parentName:"ol"},"Melakukan ",(0,i.kt)("inlineCode",{parentName:"li"},"clone")," suatu repository dari tempat lain (seperti internet)")),(0,i.kt)("h5",{id:"inisialisasi-folder"},"Inisialisasi Folder"),(0,i.kt)("p",null,"Apabila kamu ingin mengubah suatu folder menjadi suatu repository git, seperti membuat baru, maka kamu harus memindahkan command line kamu ke folder proyek tersebut. Lalu melakukan init di folder tersebut dengan ",(0,i.kt)("inlineCode",{parentName:"p"},"git init"),"."),(0,i.kt)(r.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,i.kt)(u.Z,{value:"win",label:"Windows",mdxType:"TabItem"},"Perintah yang dilakukan adalah seperti berikut:",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"PS C:\\Users\\User> cd C:\\lokasi\\ke\\proyek\nPS C:\\lokasi\\ke\\proyek> git init\n"))),(0,i.kt)(u.Z,{value:"mac",label:"Linux/macOS",mdxType:"TabItem"},"Perintah yang dilakukan adalah seperti berikut:",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ cd /home/user/lokasi/ke/proyek\n$ git init\n")))),(0,i.kt)("p",null,"Ini akan membuat suatu folder bernama ",(0,i.kt)("inlineCode",{parentName:"p"},".git")," di dalam folder tersebut. Folder ini digunakan git untuk melakukan kepengurusan repository kamu. ",(0,i.kt)("strong",{parentName:"p"},"Jangan hapus folder ini"),". Jika kamu menghapus folder ini, sama saja kamu menghapus hubungan git dengan folder tersebut."),(0,i.kt)("h5",{id:"clone-repository"},"Clone Repository"),(0,i.kt)("p",null,"Apabila kamu ingin mengunduh dan melakukan inisialisasi repository yang ada di tempat lain (seperti GitHub), kamu bisa mendapatkan link atau path ke repository git tersebut, dan menggunakan perintah ",(0,i.kt)("inlineCode",{parentName:"p"},"git clone")," seperti berikut:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ git clone git@github.com:kambi-ng/missing-semester.git\n# atau\n$ git clone https://github.com/kambi-ng/missing-semester.git\n")),(0,i.kt)("p",null,"Kamu juga bisa memberi argumen lokasi di mana repository akan disimpan. Jika tidak ada argumen tersebut, maka nama repository akan digunakan sebagai path tujuan. Dalam kasus ini, akan dibuat folder baru bernama ",(0,i.kt)("inlineCode",{parentName:"p"},"missing-semester")," yang berisi repository git dari website ini."),(0,i.kt)("h4",{id:"commit-1"},"Commit"),(0,i.kt)("p",null,"Untuk membuat suatu commit, kamu harus memberi tahu git file atau folder apa saja yang ingin kamu update. Kamu bisa melakukan hal ini dengan perintah ",(0,i.kt)("inlineCode",{parentName:"p"},"git add"),". Kamu juga bisa menambahkan semua yang ada di dalam repository dengan flag ",(0,i.kt)("inlineCode",{parentName:"p"},"-A"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ git add README.md\n$ git add main.py\n$ git add foo/\n$ git add -A\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Kamu bisa melihat status dari repository kamu (file apa saja yang sudah di-stage, apa yang belum, dan lain-lain) dengan menggunakan perintah ",(0,i.kt)("inlineCode",{parentName:"p"},"git status"),"."),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre"},'$ git status\nOn branch master\nYour branch is up-to-date with \'origin/main\'.\nUntracked files:\n  (use "git add <file>..." to include in what will be committed)\n\n    README\n\nnothing added to commit but untracked files present (use "git add" to track)\n'))),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Apabila kamu memindahkan/rename suatu file/folder, kamu harus memberi tahu git untuk menghapus file/folder tersebut untuk didelete juga di git menggunakan perintah ",(0,i.kt)("inlineCode",{parentName:"p"},"git rm"),"."),(0,i.kt)("p",{parentName:"admonition"},"Contoh saat melakukan rename file ",(0,i.kt)("inlineCode",{parentName:"p"},"README.md")," menjadi ",(0,i.kt)("inlineCode",{parentName:"p"},"README"),":"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre"},"$ mv README.md README\n$ git rm README.md\n$ git add README\n"))),(0,i.kt)("p",null,"Setelah itu, kamu bisa menggunakan perintah ",(0,i.kt)("inlineCode",{parentName:"p"},'git commit -m "pesan commit"')," (ubah pesan commit sesuai dengan perubahan yang kamu lakukan) untuk melakukan commit. Kamu juga bisa menghapus semua argumen, ini akan memunculkan editor kamu untuk melakukan edit pesan. Tidak disarankan apabila kamu tidak pernah menggunakan editor berbasis command line seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"vim")," atau ",(0,i.kt)("inlineCode",{parentName:"p"},"nano"),"."),(0,i.kt)("h4",{id:"push"},"Push"),(0,i.kt)("h3",{id:"branching"},"Branching"),(0,i.kt)("h4",{id:"membuat-baru"},"Membuat Baru"),(0,i.kt)("h4",{id:"push-1"},"Push"),(0,i.kt)("h4",{id:"merge"},"Merge"),(0,i.kt)("h2",{id:"resources"},"Resources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://git-scm.com/book/en/v2/"},"Git Book")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://missing.csail.mit.edu/2020/version-control/"},"Missing Semester/Version Control (Git)"))))}k.isMDXComponent=!0}}]);